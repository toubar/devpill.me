<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Front End Development on</title><link>https://devpill-me.vercel.app/docs/front-end-development/</link><description>Recent content in Front End Development on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 09 Mar 2022 08:47:36 +0000</lastBuildDate><atom:link href="https://devpill-me.vercel.app/docs/front-end-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://devpill-me.vercel.app/docs/front-end-development/introduction/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/introduction/</guid><description>Front-end (FE) development is probably the easiest once out of all of the ones I&amp;rsquo;ll be listing in my guide. Most of the technology stack blockchain developers use to build user interfaces for their applications overlaps with the traditional web-development infrastructure and so there are is a mature ecosystem of languages, libraries, and APIs you can make use of as a developer to make your life much easier as well as a vast community of developers which maintain codebases, provide support through platforms like StackOverflow and create very well produced tutorials and documentations for learning these established technologies, something which isn&amp;rsquo;t the norm in rapidly emerging and constantly evolving web3 technologies.</description></item><item><title>Basics</title><link>https://devpill-me.vercel.app/docs/front-end-development/basics/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/basics/</guid><description>The pillars of web development technologies are HyperText Markup Language (HTML), Cascading Style Sheets (CSS), JavaScript (JS), and web application programming interfaces (APIs).
HTML is the language that is used to structure websites, with HTML you can insert text, images, videos, create different sections for your website, create links to other sites, and more. CSS is a styling language that helps you edit how your HTML elements look, how they are displayed and how they are arranged on your screen.</description></item><item><title>React</title><link>https://devpill-me.vercel.app/docs/front-end-development/react/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/react/</guid><description>In modern web development, you&amp;rsquo;ll almost never write vanilla HTML, CSS, and JavaScript to build your websites. Web developers learn a view framework that helps them to better structure their code with components and also optimize the way in which components are rendered and how changes to the state of the application affect what the users see. The most popular web development framework is React with a wide margin compared to Vue.</description></item><item><title>Typescript</title><link>https://devpill-me.vercel.app/docs/front-end-development/typescript/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/typescript/</guid><description>Typescript is a superset of JavaScript which allows you to statically type JavaScript code. This means that you declare the types of variables (integer, string, &amp;hellip;). It allows for a better developer experience as the Typescript compiler can catch many errors ahead of time since it checks the types of the objects ahead of time. It also allows developers to tap into extra features on top of JavaScript which allows writing more expressive JavaScript.</description></item><item><title>NextJS</title><link>https://devpill-me.vercel.app/docs/front-end-development/nextjs/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/nextjs/</guid><description>Next.js is a React framework that enables server-side rendering, static site generation, does smart bundling, route pre-fetching, and a lot more. Next.js is able to heavily optimize your websites by only loading what you need on-demand instead of having to load up the entire site at the beginning. It also allows for a much better experience with creating API routes thanks to its file-system routing feature, it optimizes images, it has Typescript support, it helps with i18n API internationalized routing, and a lot more.</description></item><item><title>Indexing / Querying</title><link>https://devpill-me.vercel.app/docs/front-end-development/indexing-querying/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/indexing-querying/</guid><description>The applications you will be building need to know what is the state of the blockchain so that your users know what is happening and can interact with the application effectively. An example of this is Uniswap&amp;rsquo;s AMM. In order to call the swap function in the smart contracts, you need to know how many tokens you will get back with an X amount of ETH that you put into the contract.</description></item><item><title>Web3 libraries</title><link>https://devpill-me.vercel.app/docs/front-end-development/web3-libraries/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/web3-libraries/</guid><description>Ethers.js is one of the most popular libraries for interacting with the Ethereum Blockchain and its ecosystem. Smart contracts that are deployed on the Ethereum blockchain have functions that can be called externally by any other account on Ethereum, be it an externally owned account (EOA = user wallet) or another smart contract. Many of these functions require certain parameters to be fed into them, they also rely oftentimes on an external state like prices of tokens on the blockchain, balances of the user&amp;rsquo;s wallet, and more.</description></item><item><title>Design</title><link>https://devpill-me.vercel.app/docs/front-end-development/design/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/design/</guid><description>As a front-end developer, you need to focus on how your application looks and how it feels to use it. A big part of that is designed, before building a website you should prototype how you want it to look, design how your users will interact with your application, how will that fit with the use case of your application, and what you want to accomplish with it, how to make it so that your users like using it and more.</description></item><item><title>Web3 templates</title><link>https://devpill-me.vercel.app/docs/front-end-development/web3-templates/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/web3-templates/</guid><description>When you are building web3 applications you usually start with a template. A template is just a group of libraries, pre-built user interfaces, and another tooling that create a favorable environment to build your application. A lot of the initial hard work to set up a project can be reused across projects to save time and effort on building redundant infrastructure. Many web3 templates have support for smart contracts out of the box which is what you&amp;rsquo;ll be interacting with most of the time as a front-end developer.</description></item><item><title>Tooling</title><link>https://devpill-me.vercel.app/docs/front-end-development/tooling/</link><pubDate>Wed, 09 Mar 2022 08:47:36 +0000</pubDate><guid>https://devpill-me.vercel.app/docs/front-end-development/tooling/</guid><description>As a developer, there are many tools you&amp;rsquo;ll use to make building applications easier and more efficient, to collaborate on projects with other people, to manage dependencies, and much more. This is a short section on different tooling you&amp;rsquo;ll find yourself using regularly.
Package management # If you&amp;rsquo;ve gotten this far in the front-end specialization you&amp;rsquo;ve certainly had to install packages like React, Next.js, tailwind.css, ethers.js, and many others. The most popular package managers in the JavaScript ecosystem are npm and yarn.</description></item></channel></rss>